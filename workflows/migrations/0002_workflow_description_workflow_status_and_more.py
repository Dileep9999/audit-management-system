# Generated by Django 5.2.1 on 2025-06-21 18:21

from django.conf import settings
from django.db import migrations, models
from django.db.models import Count
from collections import defaultdict

def make_workflow_names_unique(apps, schema_editor):
    Workflow = apps.get_model('workflows', 'Workflow')
    
    # Get all workflows grouped by user and name
    duplicates = (
        Workflow.objects
        .values('created_by', 'name')
        .annotate(count=Count('id'))
        .filter(count__gt=1)
    )
    
    # For each group of duplicates
    for dup in duplicates:
        workflows = Workflow.objects.filter(
            created_by=dup['created_by'],
            name=dup['name']
        ).order_by('created_at')
        
        # Skip the first one (keep original name)
        for i, workflow in enumerate(workflows[1:], 1):
            workflow.name = f"{workflow.name} ({i})"
            workflow.save()

class Migration(migrations.Migration):

    dependencies = [
        ("workflows", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="workflow",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="workflow",
            name="status",
            field=models.CharField(
                choices=[
                    ("draft", "Draft"),
                    ("active", "Active"),
                    ("archived", "Archived"),
                ],
                default="draft",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="workflow",
            name="version",
            field=models.PositiveIntegerField(default=1),
        ),
        # Run the data migration before adding the unique constraint
        migrations.RunPython(make_workflow_names_unique),
        migrations.AlterUniqueTogether(
            name="workflow",
            unique_together={("name", "created_by")},
        ),
    ]
